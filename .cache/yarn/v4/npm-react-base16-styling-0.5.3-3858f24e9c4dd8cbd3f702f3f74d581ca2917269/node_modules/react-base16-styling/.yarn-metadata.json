{
  "manifest": {
    "name": "react-base16-styling",
    "version": "0.5.3",
    "description": "React styling with base16 color scheme support",
    "main": "lib/index.js",
    "scripts": {
      "build": "npm -s run build-lib && npm -s run build-flow",
      "build-lib": "NODE_ENV=production babel src --out-dir lib",
      "build-flow": "cp src/*.js.flow lib",
      "test": "ava",
      "lint": "eslint src",
      "preversion": "npm -s run lint && npm -s run test",
      "version": "npm run build && git add -A .",
      "postversion": "git push",
      "prepublish": "npm run build",
      "flow": "flow"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/alexkuz/react-base16-styling.git"
    },
    "keywords": [
      "react",
      "theme",
      "base16",
      "styling"
    ],
    "author": {
      "name": "Alexander",
      "email": "alexkuz@gmail.com",
      "url": "http://kuzya.org/"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/alexkuz/react-base16-styling/issues"
    },
    "homepage": "https://github.com/alexkuz/react-base16-styling#readme",
    "devDependencies": {
      "ava": "^0.18.2",
      "babel-cli": "^6.6.5",
      "babel-core": "^6.7.4",
      "babel-eslint": "^7.1.1",
      "babel-plugin-transform-flow-strip-types": "^6.22.0",
      "babel-plugin-transform-runtime": "^6.6.0",
      "babel-preset-es2015": "^6.6.0",
      "babel-preset-stage-0": "^6.5.0",
      "eslint": "^3.17.0",
      "eslint-plugin-babel": "^4.1.0",
      "eslint-plugin-flowtype": "^2.30.0",
      "flow-bin": "^0.41.0",
      "pre-commit": "^1.1.3"
    },
    "dependencies": {
      "base16": "^1.0.0",
      "lodash.curry": "^4.0.1",
      "lodash.flow": "^3.3.0",
      "pure-color": "^1.2.0"
    },
    "pre-commit": [
      "lint",
      "test"
    ],
    "ava": {
      "require": [
        "babel-register"
      ],
      "babel": "inherit"
    },
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v4/npm-react-base16-styling-0.5.3-3858f24e9c4dd8cbd3f702f3f74d581ca2917269/node_modules/react-base16-styling/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-base16-styling [![Build Status](https://img.shields.io/travis/alexkuz/react-base16-styling/master.svg)](https://travis-ci.org/alexkuz/react-base16-styling) [![Latest Stable Version](https://img.shields.io/npm/v/react-base16-styling.svg)](https://www.npmjs.com/package/react-base16-styling)\n\nReact styling with base16 color scheme support\n\nInspired by [react-themeable](https://github.com/markdalgleish/react-themeable), this utility provides flexible theming for your component with [base16](https://github.com/chriskempson/base16) theme support.\n\n## Install\n\n```\nnpm i -S react-base16-styling\n```\n\n## Usage\n\n```jsx\nimport { createStyling } from 'react-base16-styling';\nimport base16Themes from './base16Themes';\n\nfunction getStylingFromBase16(base16Theme) {\n  return {\n    myComponent: {\n      backgroundColor: base16Theme.base00\n    },\n\n    myComponentToggleColor({ style, className }, clickCount) {\n      return {\n        style: {\n          ...style,\n          backgroundColor: clickCount % 2 ? 'red' : 'blue'\n        }\n      }\n    }\n  };\n}\n\nconst createStylingFromTheme = createStyling(getStylingFromBase16, {\n  defaultBase16: base16Themes.solarized,\n  base16Themes\n});\n\nclass MyComponent extends Component {\n  state = { clickCount: 0 }\n  render() {\n    const { theme } = this.props;\n    const { clickCount } = this.state;\n    \n    const styling = createStylingFromTheme(theme);\n    \n    return (\n      <div {...styling('myComponent')}>\n        <a onClick={() => this.setState({ clickCount: clickCount + 1 })}>Click Me</a>\n        <div {...styling('myComponentToggleColor', clickCount)}>\n          {clickCount}\n        </div>\n      </div>\n    )\n  }\n}\n```\n\n## `createStyling`\n\n```js\nfunction(getStylingFromBase16, defaultStylingOptions, themeOrStyling)\n```\n\nArgument | Signature | Description\n----|-----|-----\n`getStylingFromBase16` | `function(base16Theme)` | creates object with default stylings for your component, using provided base16 theme.\n`defaultStylingOptions` | `{ defaultBase16, base16Themes }` | optional parameters, allow to set default `base16` theme and additional `base16` themes for component.\n`themeOrStyling` | `string` or `object` | `base16` theme name, `base16` theme object or styling object. Theme name can have a modifier: `\"themeName:inverted\"` to invert theme colors (see [[#invertTheme]])\n\nStyling object values could be:\n    - objects (treated as style definitions)\n    - strings (class names)\n    - functions (they may be provided with additional parameters and should return object { style, className })\n\n## `getBase16Theme`\n```js\nfunction(themeOrStyling, base16Themes)\n```\n\nHelper method that returns `base16` theme object if `themeOrStyling` is `base16` theme name or theme object.\n\n## `invertTheme`\n```js\nfunction(theme)\n```\n\nHelper method that inverts `base16` theme colors, creating light theme out of dark one or vice versa.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Alexander Kuznetsov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-base16-styling/-/react-base16-styling-0.5.3.tgz#3858f24e9c4dd8cbd3f702f3f74d581ca2917269",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-base16-styling/-/react-base16-styling-0.5.3.tgz",
    "hash": "3858f24e9c4dd8cbd3f702f3f74d581ca2917269",
    "integrity": "sha1-OFjyTpxN2MvT9wLz901YHKKRcmk=",
    "registry": "npm",
    "packageName": "react-base16-styling"
  },
  "registry": "npm",
  "hash": "3858f24e9c4dd8cbd3f702f3f74d581ca2917269"
}