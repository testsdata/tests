{
  "manifest": {
    "name": "sort-object-keys",
    "version": "1.1.3",
    "description": "Sort an object's keys, including an optional key list",
    "keywords": [
      "keys",
      "object",
      "sort"
    ],
    "homepage": "https://github.com/keithamus/sort-object-keys#readme",
    "bugs": {
      "url": "https://github.com/keithamus/sort-object-keys/issues"
    },
    "license": "MIT",
    "author": {
      "name": "Keith Cirkel",
      "email": "npm@keithcirkel.co.uk",
      "url": "http://keithcirkel.co.uk/"
    },
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "git+ssh://git@github.com/keithamus/sort-object-keys.git"
    },
    "scripts": {
      "semantic-release": "travis-after-all && semantic-release pre && npm publish && semantic-release post",
      "test": "node test.js"
    },
    "config": {
      "ghooks": {
        "pre-commit": "npm t",
        "commit-msg": "validate-commit-msg"
      }
    },
    "devDependencies": {
      "ghooks": "^1.0.1",
      "semantic-release": "^4.3.5",
      "travis-after-all": "^1.4.4",
      "validate-commit-msg": "^2.4.1"
    },
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v4/npm-sort-object-keys-1.1.3-bff833fe85cab147b34742e45863453c1e190b45/node_modules/sort-object-keys/package.json",
    "readmeFilename": "README.md",
    "readme": "# Sort Object\n\n\n\n[![Build Status](https://travis-ci.org/keithamus/sort-object-keys.svg)](https://travis-ci.org/keithamus/sort-object-keys)\n\nReturns a copy of an object with all keys sorted.\n\nThe second argument is optional and is used for ordering - to provide custom sorts. You can either pass an array containing ordered keys or a function to sort the keys (same signature as in [`Array.prototype.sort()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)).\n\n```js\nconst assert = require('assert');\nconst sortObject = require('sort-object-keys');\n\nassert.equal(JSON.stringify({\n  c: 1,\n  b: 1,\n  d: 1,\n  a: 1,\n}), JSON.stringify({\n  a: 1,\n  b: 1,\n  c: 1,\n  d: 1,\n}));\n\nassert.equal(JSON.stringify(sortObject({\n  c: 1,\n  b: 1,\n  d: 1,\n  a: 1,\n}, ['b', 'a', 'd', 'c'])), JSON.stringify({\n  b: 1,\n  a: 1,\n  d: 1,\n  c: 1,\n}));\n\nfunction removeKeyAncCompareIndex(keyA, keyB){\n  var a = parseInt(keyA.slice(4));\n  var b = parseInt(keyB.slice(4));\n  return a - b;\n}\n\nassert.equal(JSON.stringify(sortObject({\n  \"key-1\": 1,\n  \"key-3\": 1,\n  \"key-10\": 1,\n  \"key-2\": 1,\n}, removeKeyAncCompareIndex)), JSON.stringify({\n  \"key-1\": 1,\n  \"key-2\": 1,\n  \"key-3\": 1,\n  \"key-10\": 1,\n}));\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/sort-object-keys/-/sort-object-keys-1.1.3.tgz#bff833fe85cab147b34742e45863453c1e190b45",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/sort-object-keys/-/sort-object-keys-1.1.3.tgz",
    "hash": "bff833fe85cab147b34742e45863453c1e190b45",
    "integrity": "sha512-855pvK+VkU7PaKYPc+Jjnmt4EzejQHyhhF33q31qG8x7maDzkeFhAAThdCYay11CISO+qAMwjOBP+fPZe0IPyg==",
    "registry": "npm",
    "packageName": "sort-object-keys"
  },
  "registry": "npm",
  "hash": "bff833fe85cab147b34742e45863453c1e190b45"
}