{
  "manifest": {
    "name": "registry-auth-token",
    "version": "4.1.1",
    "description": "Get the auth token set for an npm registry (if any)",
    "main": "index.js",
    "scripts": {
      "test": "mocha",
      "posttest": "standard",
      "coverage": "istanbul cover _mocha"
    },
    "repository": {
      "type": "git",
      "url": "git+ssh://git@github.com/rexxars/registry-auth-token.git"
    },
    "engines": {
      "node": ">=6.0.0"
    },
    "keywords": [
      "npm",
      "conf",
      "config",
      "npmconf",
      "registry",
      "auth",
      "token",
      "authtoken"
    ],
    "author": {
      "name": "Espen Hovlandsdal",
      "email": "espen@hovlandsdal.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/rexxars/registry-auth-token/issues"
    },
    "homepage": "https://github.com/rexxars/registry-auth-token#readme",
    "dependencies": {
      "rc": "^1.2.8"
    },
    "devDependencies": {
      "istanbul": "^0.4.2",
      "mocha": "^6.1.4",
      "require-uncached": "^1.0.2",
      "standard": "^12.0.1"
    },
    "standard": {
      "ignore": [
        "coverage/**"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v4/npm-registry-auth-token-4.1.1-40a33be1e82539460f94328b0f7f0f84c16d9479/node_modules/registry-auth-token/package.json",
    "readmeFilename": "README.md",
    "readme": "# registry-auth-token\n\n[![npm version](http://img.shields.io/npm/v/registry-auth-token.svg?style=flat-square)](http://browsenpm.org/package/registry-auth-token)[![Build Status](http://img.shields.io/travis/rexxars/registry-auth-token/master.svg?style=flat-square)](https://travis-ci.org/rexxars/registry-auth-token)\n\nGet the auth token set for an npm registry from `.npmrc`. Also allows fetching the configured registry URL for a given npm scope.\n\n## Installing\n\n```\nnpm install --save registry-auth-token\n```\n\n## Usage\n\nReturns an object containing `token` and `type`, or `undefined` if no token can be found. `type` can be either `Bearer` or `Basic`.\n\n```js\nvar getAuthToken = require('registry-auth-token')\nvar getRegistryUrl = require('registry-auth-token/registry-url')\n\n// Get auth token and type for default `registry` set in `.npmrc`\nconsole.log(getAuthToken()) // {token: 'someToken', type: 'Bearer'}\n\n// Get auth token for a specific registry URL\nconsole.log(getAuthToken('//registry.foo.bar'))\n\n// Find the registry auth token for a given URL (with deep path):\n// If registry is at `//some.host/registry`\n// URL passed is `//some.host/registry/deep/path`\n// Will find token the closest matching path; `//some.host/registry`\nconsole.log(getAuthToken('//some.host/registry/deep/path', {recursive: true}))\n\n// Find the configured registry url for scope `@foobar`.\n// Falls back to the global registry if not defined.\nconsole.log(getRegistryUrl('@foobar'))\n\n// Use the npm config that is passed in\nconsole.log(getRegistryUrl('http://registry.foobar.eu/', {\n  npmrc: {\n    'registry': 'http://registry.foobar.eu/',\n    '//registry.foobar.eu/:_authToken': 'qar'\n  }\n}))\n```\n\n## Return value\n\n```js\n// If auth info can be found:\n{token: 'someToken', type: 'Bearer'}\n\n// Or:\n{token: 'someOtherToken', type: 'Basic'}\n\n// Or, if nothing is found:\nundefined\n```\n\n## Security\n\nPlease be careful when using this. Leaking your auth token is dangerous.\n\n## License\n\nMIT-licensed. See LICENSE.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Espen Hovlandsdal\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/registry-auth-token/-/registry-auth-token-4.1.1.tgz#40a33be1e82539460f94328b0f7f0f84c16d9479",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/registry-auth-token/-/registry-auth-token-4.1.1.tgz",
    "hash": "40a33be1e82539460f94328b0f7f0f84c16d9479",
    "integrity": "sha512-9bKS7nTl9+/A1s7tnPeGrUpRcVY+LUh7bfFgzpndALdPfXQBfQV77rQVtqgUV3ti4vc/Ik81Ex8UJDWDQ12zQA==",
    "registry": "npm",
    "packageName": "registry-auth-token"
  },
  "registry": "npm",
  "hash": "40a33be1e82539460f94328b0f7f0f84c16d9479"
}