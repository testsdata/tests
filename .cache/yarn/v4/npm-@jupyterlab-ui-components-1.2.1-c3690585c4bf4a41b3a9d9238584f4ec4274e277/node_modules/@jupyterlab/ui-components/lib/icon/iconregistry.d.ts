import React from 'react';
import { IIconRegistry, Icon } from './interfaces';
/**
 * The icon registry class.
 */
export declare class IconRegistry implements IIconRegistry {
    constructor(options?: IconRegistry.IOptions);
    addIcon(...icons: Icon.IModel[]): void;
    contains(name: string): boolean;
    /**
     * Get the icon as an HTMLElement of tag <svg><svg/>
     */
    icon(props: Icon.INodeOptions & {
        container?: HTMLElement;
    }): HTMLElement | null;
    /**
     * Get the icon as a ReactElement of tag <tag><svg><svg/><tag/>
     * TODO: figure out how to remove the unnecessary outer <tag>
     */
    iconReact(props: Icon.INodeOptions & {
        tag?: 'div' | 'span';
    }): React.ReactElement;
    private _resolveName;
    resolveName(name: string): string;
    resolveSvg(name: string): HTMLElement | null;
    svg(name: string): string;
    static iconClassName(name: string): string;
    private _classNameToName;
    private _debug;
    private _nameToClassName;
    private _svg;
}
/**
 * The defaultIconRegistry instance.
 */
export declare const defaultIconRegistry: IconRegistry;
/**
 * Alias for defaultIconRegistry.iconReact that can be used as a React component
 */
export declare const DefaultIconReact: (props: Icon.INodeOptions & {
    tag?: "span" | "div";
}) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
export declare namespace IconRegistry {
    /**
     * The options used to create an icon registry.
     */
    interface IOptions {
        /**
         * The initial icons for the registry.
         * The [[Icon.defaultIcons]] will be used if not given.
         */
        initialIcons?: Icon.IModel[];
        /**
         * If the debug flag is set, missing icons will raise a warning
         * and be visually marked with an "X". Otherwise, missing icons
         * will fail silently.
         */
        debug?: boolean;
    }
}
