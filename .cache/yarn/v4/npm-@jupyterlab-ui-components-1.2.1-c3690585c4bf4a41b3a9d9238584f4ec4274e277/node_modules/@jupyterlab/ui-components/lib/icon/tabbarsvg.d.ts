import { Message } from '@phosphor/messaging';
import { VirtualElement } from '@phosphor/virtualdom';
import { DockPanel, TabBar, Widget } from '@phosphor/widgets';
import { IconKindType } from '../style/icon';
/**
 * A widget which displays titles as a single row or column of tabs. Tweaked
 * to enable the use of inline svgs as tab icons.
 */
export declare class TabBarSvg<T> extends TabBar<T> {
    /**
     * Construct a new tab bar. Sets the (icon) kind and overrides
     * the default renderer.
     *
     * @param options - The options for initializing the tab bar.
     */
    constructor(options: TabBarSvg.IOptions<T>);
    /**
     * A message handler invoked on an `'update-request'` message. Adds svg
     * nodes to icon nodes as appropriate
     */
    protected onUpdateRequest(msg: Message): void;
    protected _kind: IconKindType;
}
export declare namespace TabBarSvg {
    interface IOptions<T> extends TabBar.IOptions<T> {
        /**
         * The kind of icon this tab bar widget should render.
         * Adds preset styling to the icons.
         */
        kind?: IconKindType;
    }
    /**
     * A modified implementation of the TabBar Renderer.
     */
    class Renderer extends TabBar.Renderer {
        /**
         * Render the icon element for a tab. This version avoids clobbering
         * the icon node's children.
         *
         * @param data - The data to use for rendering the tab.
         *
         * @returns A virtual element representing the tab icon.
         */
        renderIcon(data: TabBar.IRenderData<any>): VirtualElement;
    }
    const defaultRenderer: Renderer;
}
/**
 * A widget which provides a flexible docking area for widgets.Tweaked
 * to enable the use of inline svgs as tab icons.
 */
export declare class DockPanelSvg extends DockPanel {
    /**
     * Construct a new dock panel. Overrides the default renderer
     * and sets the (icon) kind
     *
     * @param options - The options for initializing the panel.
     */
    constructor(options: DockPanelSvg.IOptions);
}
export declare namespace DockPanelSvg {
    interface IOptions extends DockPanel.IOptions {
        /**
         * The kind of icon this dock panel widget should render.
         * Adds preset styling to the icons.
         */
        kind?: IconKindType;
    }
    /**
     * A modified implementation of the DockPanel Renderer.
     */
    class Renderer extends DockPanel.Renderer {
        constructor(kind?: IconKindType);
        /**
         * Create a new tab bar (with inline svg icons enabled
         * for use with a dock panel.
         *
         * @returns A new tab bar for a dock panel.
         */
        createTabBar(): TabBarSvg<Widget>;
        _kind: IconKindType;
    }
}
